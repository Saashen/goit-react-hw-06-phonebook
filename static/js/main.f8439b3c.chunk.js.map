{"version":3,"sources":["components/ContactList/ContactList.module.css","components/App/App.module.css","components/Filter/Filter.module.css","components/Alert/Alert.module.css","transitions/slide.module.css","transitions/slideContacts.module.css","transitions/slideLogo.module.css","transitions/slideAlert.module.css","transitions/transform.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","redux/phonebook/phonebookActions.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactFormContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/ContactListItem/ContactListItem.js","components/ContactListItem/ContactListItemContainer.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/App/App.js","components/App/AppContainer.js","redux/phonebook/phonebookReducers.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","Type","Alert","className","styles","Text","ContactForm","state","name","number","isAlert","id","nameId","uuid","numberId","isInContactList","contact","props","contacts","find","c","toLowerCase","setState","onAddContact","handleChange","e","target","value","handleSubmit","preventDefault","contactsFromLS","localStorage","getItem","getContactFromLS","this","JSON","parse","CSSTransition","in","timeout","classNames","slideAlertTransition","unmountOnExit","onEntered","setTimeout","form","onSubmit","label","htmlFor","caption","input","type","onChange","button","Component","connect","phonebook","dispatch","payload","pbActions","Filter","filter","onFilter","length","transformTransition","Caption","Input","ContactListItem","onDeleteContact","onClick","deleteContact","ContactList","TransitionGroup","component","Contacts","includes","map","key","slideTransition","Contact","App","isLoaded","slideLogoTransition","Phonebook","slideContactsTransition","initialState","phonebookReducer","newContacts","setItem","stringify","rootReducer","combineReducers","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8439b3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts\":\"ContactList_Contacts__3q7AW\",\"Contact\":\"ContactList_Contact__2gVoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Ny9C0\",\"Phonebook\":\"App_Phonebook__133iz\",\"Contacts\":\"App_Contacts__3nicq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__O7rco\",\"Caption\":\"Filter_Caption__2afm1\",\"Input\":\"Filter_Input__1knzP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"Alert_Alert__1caDl\",\"Text\":\"Alert_Text__RGnSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1Zi69\",\"enterActive\":\"slide_enterActive__VzD00\",\"exit\":\"slide_exit__1VE_9\",\"exitActive\":\"slide_exitActive__1ul8-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideContacts_enter__3DdpA\",\"enterActive\":\"slideContacts_enterActive__2VUQ7\",\"exit\":\"slideContacts_exit__lRZrP\",\"exitActive\":\"slideContacts_exitActive__TBo9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideLogo_enter__1a6T5\",\"enterActive\":\"slideLogo_enterActive__2BeQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideAlert_enter__3bL5n\",\"enterActive\":\"slideAlert_enterActive__3S9MR\",\"exit\":\"slideAlert_exit__3RWvF\",\"exitActive\":\"slideAlert_exitActive__eRzN_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transform_enter__2D0Tu\",\"enterActive\":\"transform_enterActive__Wj7eG\",\"exit\":\"transform_exit__35pHs\",\"exitActive\":\"transform_exitActive__3kaj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__Y4aHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1N0Jp\",\"label\":\"ContactForm_label__CMjd9\",\"caption\":\"ContactForm_caption__v9RhV\",\"input\":\"ContactForm_input__1LJIz\",\"button\":\"ContactForm_button__2hC3_\"};","export const Type = {\n  ADD_CONTACT: 'ADD_CONTACT',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n  FILTER_CONTACT: 'FILTER_CONTACT',\n  GET_CONTACT_FROM_LS: 'GET_CONTACT_FROM_LS',\n};\n\nexport const addContact = contact => ({\n  type: Type.ADD_CONTACT,\n  payload: { contact },\n});\n\nexport const deleteContact = id => ({\n  type: Type.DELETE_CONTACT,\n  payload: { id },\n});\nexport const getContactFromLS = contacts => ({\n  type: Type.GET_CONTACT_FROM_LS,\n  payload: { contacts },\n});\n\nexport const filterContact = value => ({\n  type: Type.FILTER_CONTACT,\n  payload: { value },\n});\n","import React from 'react';\nimport styles from './Alert.module.css';\n\nconst Alert = () => (\n  <div className={styles.Alert}>\n    <p className={styles.Text}>Contact already exists!</p>\n  </div>\n);\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nimport uuid from 'uuid/v4';\nimport styles from './ContactForm.module.css';\nimport slideAlertTransition from '../../transitions/slideAlert.module.css';\n\nimport Alert from '../Alert/Alert';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    isAlert: false,\n  };\n\n  id = {\n    nameId: uuid(),\n    numberId: uuid(),\n  };\n\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n    getContactFromLS: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  componentDidMount() {\n    const contactsFromLS = localStorage.getItem('contacts');\n    if (contactsFromLS) {\n      const { getContactFromLS } = this.props;\n      getContactFromLS(JSON.parse(contactsFromLS));\n    }\n  }\n\n  isInContactList = (contact, name) =>\n    this.props.contacts.find(c => c.name.toLowerCase() === name.toLowerCase())\n      ? this.setState({ isAlert: true })\n      : this.props.onAddContact({ ...contact });\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    const contact = {\n      id: uuid(),\n      name,\n      number,\n    };\n\n    if (name === '' || number === '') {\n      return;\n    }\n\n    this.isInContactList(contact, name);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number, isAlert } = this.state;\n    const { nameId, numberId } = this.id;\n    return (\n      <>\n        <CSSTransition\n          in={isAlert}\n          timeout={250}\n          classNames={slideAlertTransition}\n          unmountOnExit\n          onEntered={() =>\n            setTimeout(() => this.setState({ isAlert: false }), 1500)\n          }\n        >\n          <Alert />\n        </CSSTransition>\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label className={styles.label} htmlFor={nameId}>\n            <span className={styles.caption}>Name</span>\n            <input\n              className={styles.input}\n              type=\"text\"\n              onChange={this.handleChange}\n              value={name}\n              name=\"name\"\n              id={nameId}\n            />\n          </label>\n          <label className={styles.label} htmlFor={numberId}>\n            <span className={styles.caption}>Number</span>\n            <input\n              className={styles.input}\n              type=\"text\"\n              onChange={this.handleChange}\n              value={number}\n              name=\"number\"\n              id={numberId}\n            />\n          </label>\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport * as pbActions from '../../redux/phonebook/phonebookActions';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = state => ({\n  contacts: state.phonebook.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: contact => dispatch(pbActions.addContact(contact)),\n  getContactFromLS: contacts => dispatch(pbActions.getContactFromLS(contacts)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\nimport transformTransition from '../../transitions/transform.module.css';\n\nconst Filter = ({ contacts, filter, onFilter }) => (\n  <CSSTransition\n    in={contacts.length > 1}\n    timeout={250}\n    classNames={transformTransition}\n    unmountOnExit\n  >\n    <section className={styles.Filter}>\n      <span className={styles.Caption}>Find contacts</span>\n      <input\n        className={styles.Input}\n        type=\"text\"\n        value={filter}\n        onChange={onFilter}\n      />\n    </section>\n  </CSSTransition>\n);\n\nFilter.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport * as pbActions from '../../redux/phonebook/phonebookActions';\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  filter: state.phonebook.filter,\n  contacts: state.phonebook.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilter: e => dispatch(pbActions.filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => (\n  <li>\n    <span>\n      {name}: {number}\n    </span>\n    <button\n      className={styles.button}\n      type=\"button\"\n      onClick={() => onDeleteContact(id)}\n    />\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebookActions';\nimport ContactListItem from './ContactListItem';\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport styles from './ContactList.module.css';\nimport slideTransition from '../../transitions/slide.module.css';\n\nimport ContactListItem from '../ContactListItem/ContactListItemContainer';\n\nconst ContactList = ({ contacts, filter }) => {\n  const filterContactsWithQuery = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  return !filter.length ? (\n    <TransitionGroup component=\"ul\" className={styles.Contacts}>\n      {contacts.map(contact => (\n        <CSSTransition\n          key={contact.id}\n          timeout={250}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <ContactListItem\n            name={contact.name}\n            number={contact.number}\n            id={contact.id}\n            className={styles.Contact}\n            key={contact.id}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  ) : (\n    <TransitionGroup component=\"ul\" className={styles.Contacts}>\n      {filterContactsWithQuery().map(contact => (\n        <CSSTransition\n          key={contact.id}\n          timeout={250}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <ContactListItem\n            name={contact.name}\n            number={contact.number}\n            id={contact.id}\n            className={styles.Contact}\n            key={contact.id}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = state => ({\n  contacts: state.phonebook.contacts,\n  filter: state.phonebook.filter,\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport styles from './App.module.css';\n\nimport slideContactsTransition from '../../transitions/slideContacts.module.css';\nimport slideLogoTransition from '../../transitions/slideLogo.module.css';\n\nimport ContactForm from '../ContactForm/ContactFormContainer';\nimport Filter from '../Filter/FilterContainer';\nimport ContactList from '../ContactList/ContactListContainer';\n\n// 1. перенести все з модуля 5\n// 2. додати reset\n// 3. поправити стилі\n// 4. додати верифікацію\n\nexport default class App extends Component {\n  state = { isLoaded: false };\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({ id: PropTypes.string.isRequired }),\n    ).isRequired,\n  };\n\n  componentDidMount() {\n    this.setState({ isLoaded: true });\n  }\n\n  render() {\n    const { isLoaded } = this.state;\n    const { contacts } = this.props;\n\n    return (\n      <div className={styles.App}>\n        <CSSTransition\n          in={isLoaded}\n          timeout={500}\n          classNames={slideLogoTransition}\n        >\n          <h1 className={styles.Phonebook}>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm />\n        <CSSTransition\n          in={contacts.length > 0}\n          timeout={500}\n          classNames={slideContactsTransition}\n          unmountOnExit\n        >\n          <h1 className={styles.Contacts}>Contacts</h1>\n        </CSSTransition>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n  contacts: state.phonebook.contacts,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { Type } from './phonebookActions';\n\nconst initialState = {\n  contacts: [],\n  filter: '',\n};\n\nconst phonebookReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case Type.ADD_CONTACT: {\n      const newContacts = [...state.contacts, payload.contact];\n      localStorage.setItem('contacts', JSON.stringify(newContacts));\n      return { ...state, contacts: newContacts };\n    }\n\n    case Type.DELETE_CONTACT: {\n      const newContacts = state.contacts.filter(\n        contact => contact.id !== payload.id,\n      );\n      localStorage.setItem('contacts', JSON.stringify(newContacts));\n      return { ...state, contacts: newContacts };\n    }\n\n    case Type.FILTER_CONTACT:\n      return { contacts: state.contacts, filter: payload.value };\n\n    case Type.GET_CONTACT_FROM_LS:\n      return { ...state, contacts: payload.contacts };\n\n    default:\n      return state;\n  }\n};\n\nexport default phonebookReducer;\n","import { combineReducers } from 'redux';\nimport phonebookReducer from './phonebook/phonebookReducers';\n\nconst rootReducer = combineReducers({\n  phonebook: phonebookReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n// import phonebookReducer from './phonebook/phonebookReducers';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/AppContainer';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}